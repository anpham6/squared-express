!function(){"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0});const s=require("path"),o=require("fs-extra"),r=require("yargs"),t=require("express"),i=require("cors"),n=require("body-parser"),a=require("request"),l=require("uuid"),c=require("archiver"),d=require("node-7z"),p=require("js-yaml"),u=require("chalk"),g=require("@squared-functions/file-manager"),m={},f=t();f.use(n.urlencoded({extended:!0}));const y=g.moduleNode();let h,b,w,v,k,R;function S(e,s){const{chrome:o,watch:r,release:t}=s;h&&e.install("image",h),w&&e.install("gulp",w),v&&e.install("cloud",v),"1"===o&&(b&&e.install("chrome",b,"1"===t),k&&e.install("compress",k)),"1"===r&&e.install("watch",undefined)}function z(e,s="",o){switch(e){case"7z":y.formatMessage(y.logType.NODE,"ARCHIVE",["Install required? [npm i 7zip-bin]","7z"],"Binary not found",{titleColor:"yellow"});break;case"archive":y.writeFail(["Unable to create archive",s],o);break;case"download":y.writeFail(["Unable to download file",s],o)}}{const a=r.usage("$0 [args]").option("access-all",{type:"boolean",description:"Grant full disk and UNC privileges"}).option("access-disk",{alias:"d",type:"boolean",description:"Grant full disk privileges"}).option("access-unc",{alias:"u",type:"boolean",description:"Grant full UNC privileges"}).option("disk-read",{alias:"r",type:"boolean",description:"Grant disk +r (read only)"}).option("disk-write",{alias:"w",type:"boolean",description:"Grant disk +w (write only)"}).option("unc-read",{alias:"y",type:"boolean",description:"Grant UNC +r (read only)"}).option("unc-write",{alias:"z",type:"boolean",description:"Grant UNC +w (write only)"}).option("env",{alias:"e",type:"string",description:"Set environment <prod|dev>",nargs:1}).option("port",{alias:"p",type:"number",description:"Set HTTP port number",nargs:1}).option("cors",{alias:"c",type:"string",description:'Enable CORS access to <origin|"*">',nargs:1}).epilogue("For more information and source: https://github.com/anpham6/squared").argv;let{NODE_ENV:l,PORT:c}=process.env,d=!1;a.accessAll?(y.setDiskRead(),y.setDiskWrite(),y.setUNCRead(),y.setUNCWrite(),d=!0):(a.accessDisk?(y.setDiskRead(),y.setDiskWrite(),d=!0):(a.diskRead&&(y.setDiskRead(),d=!0),a.diskWrite&&(y.setDiskWrite(),d=!0)),a.accessUnc?(y.setUNCRead(),y.setUNCWrite(),d=!0):(a.uncRead&&(y.setUNCRead(),d=!0),a.uncWrite&&(y.setUNCWrite(),d=!0)));let m={};try{if(m=o.existsSync("./squared.settings.yml")&&p.load(o.readFileSync(s.resolve("./squared.settings.yml"),"utf8"))||require("./squared.settings.json"),({compress:k,cloud:v,gulp:w,chrome:b}=m),g.loadSettings(m,d),k){const e=k["7za_bin"];if(e&&o.existsSync(e))R=e;else try{const e=require("7zip-bin");R=e.path7za}catch(e){}}h=require((null===(e=m.image)||void 0===e?void 0:e.command)||"@squared-functions/image/jimp")}catch(e){h=require("@squared-functions/image/jimp"),y.writeFail("Unable to load settings",e)}if(m.routing){a.env&&m.routing[a.env.trim()]?l=a.env.trim():l&&!m.routing[l]&&(l=m.env),l&&m.routing[l]||(l="development");const e=["all","get","post","put","delete","patch","options","head","checkout","connect","copy","lock","merge","mkactivity","mkcol","move","m-search","notify","propfind","proppatch","purge","report","search","subscribe","trace","unlock","unsubscribe"];let o=0,r=0;for(const i of[m.routing.__SHARED__,m.routing[l]])if(Array.isArray(i))for(const n of i){const{path:i,mount:a}=n;if(i&&a){const e=s.join(__dirname,a);try{f.use(i,t.static(e)),y.formatMessage(y.logType.SYSTEM,"MOUNT",`${u.bgGrey(e)} ${u.yellow("->")} ${u.bold(i)}`,"",{titleColor:"yellow"}),++o}catch(e){y.writeFail(["Unable to mount directory",i],e)}}else{let s=n.handler;if(s){"string"==typeof s&&(s=[s]);let o=[];for(const e of s){const s=y.parseFunction(e);s&&o.push(s)}switch(o.length){case 0:continue;case 1:o=o[0]}let t=!1;for(const s of e){const e=n[s];if(e&&"string"==typeof e){try{f[s](e,o),y.formatMessage(y.logType.SYSTEM,"ROUTE",u.bgGrey(e),"",{titleColor:"yellow"}),++r}catch(s){y.writeFail(["Unable to create route",e],s)}t=!0;break}}t||f.use(o)}}}o&&console.log(`\n${u.bold(o)} ${1===o?"directory was":"directories were"} mounted.${r?"":"\n"}`),r&&console.log(`\n${u.bold(r)} ${1===r?"route was":"routes were"} created.\n`)}else l||(l="development"),f.use("/",t.static(s.join(__dirname,"html"))),f.use("/dist",t.static(s.join(__dirname,"dist"))),y.writeFail("Routing not defined");y.formatMessage(y.logType.SYSTEM,"DISK",(y.hasDiskRead()?u.green("+"):u.red("-"))+"r "+(y.hasDiskWrite()?u.green("+"):u.red("-"))+"w","",{titleColor:"blue"}),y.formatMessage(y.logType.SYSTEM,"UNC",(y.hasUNCRead()?u.green("+"):u.red("-"))+"r "+(y.hasUNCWrite()?u.green("+"):u.red("-"))+"w","",{titleColor:"blue"}),a.cors?(f.use(i({origin:a.cors})),f.options("*",i())):m.cors&&m.cors.origin&&(f.use(i(m.cors)),f.options("*",i()),a.cors="string"==typeof m.cors.origin?m.cors.origin:"true"),y.formatMessage(y.logType.SYSTEM,"CORS",a.cors?u.green(a.cors):u.grey("disabled"),"",{titleColor:"blue"}),a.port?c=a.port.toString():!c&&m.port&&(c=m.port[l]),c=+c>=0&&c||"3000",f.use(n.json({limit:m.request_post_limit||"250mb"})),f.listen(c,(()=>{console.log(""),y.formatMessage(y.logType.SYSTEM,l.toUpperCase(),"Express server listening on port "+u.bold(c),"",{titleColor:l.startsWith("prod")?"green":"yellow"}),console.log("")})),process.env.NODE_ENV=l,process.env.PORT=c}f.post("/api/v1/assets/copy",((e,o)=>{const r=e.query,t=s.normalize(r.to);if(t&&g.hasPermissions(t,o))try{const s=new g(t,e.body,(function(){o.json({success:this.files.size>0,files:Array.from(this.files)}),s.formatMessage(y.logType.NODE,"WRITE",[t,this.files.size+" files"],"")}));S(s,r),s.processAssets("1"===r.empty)}catch(e){o.json(y.getResponseError("FILE: Unknown",e.toString()))}})),f.post("/api/v1/assets/archive",((e,r)=>{const t=e.query,i=t.to&&s.normalize(t.to);let n,p=s.join(__dirname,"tmp",l.v4());try{i&&g.hasPermissions(i,r)?p=i:o.mkdirpSync(p),n=p+"-zip",o.mkdirpSync(n)}catch(e){return void r.json(y.getResponseError(`DIRECTORY: ${p}`,e.toString()))}let u=t.append_to,f=!1,h=!1,b=(t.format||"zip").toLowerCase();switch(s.isAbsolute(u)&&(u=s.normalize(u)),b){case"7z":R?f=!0:(z("7z"),b="zip");break;case"gz":case"tgz":h=!0;case"tar":break;default:b="zip"}const w=i=>{i=(t.filename||i||l.v4())+"."+b;let a=s.join(n,i);const u=new g(p,e.body,(()=>{const e=u.files.size>0,t=e?l.v4():"",n={success:e,zipname:i,downloadKey:t,files:Array.from(u.files)},w=e=>{e&&(n.bytes=e,m[t]=a),r.json(n),u.formatMessage(y.logType.NODE,"WRITE",[n.zipname,e+" bytes"])};if(f)d.add(a,p+s.sep+"*",{$bin:R,recursive:!0}).on("end",(()=>w(g.getFileSize(a)))).on("error",(e=>z("archive",b,e)));else{const e=c(b,{zlib:{level:g.moduleCompress().gzipLevel}}),t=o.createWriteStream(a);t.on("close",(()=>{if(h){const e="tgz"===b?a.replace(/tar$/,"tgz"):a+".gz";g.moduleCompress().createWriteStreamAsGzip(a,e).on("finish",(()=>{a=e,n.zipname=s.basename(e),w(g.getFileSize(e))})).on("error",(e=>{n.success=!1,z("archive",b,e),r.json(n)}))}else w(e.pointer())})).on("error",(e=>z("archive",b,e))),e.pipe(t),e.directory(p,!1),e.finalize()}}));S(u,t);try{u.processAssets()}catch(e){r.json(y.getResponseError("FILE: Unknown",e.toString()))}};if(u)if(R){const e=/([^/\\]+)\.\w+?$/i.exec(u);if(e){const t=s.join(n,e[0]),i=()=>{d.extractFull(t,p,{$bin:R,recursive:!0}).on("end",(()=>{w(e[1])})).on("error",(e=>{y.writeFail(["Unable to decompress file",t],e),w()}))};try{if(y.isFileURI(u)){const e=o.createWriteStream(t);let s;return e.on("finish",i),void a(u).on("response",(e=>{const o=e.statusCode;o>=300&&(z("download",u,o+" "+e.statusMessage),s=!0)})).on("error",(e=>{s||z("download",u,e),w()})).pipe(e)}if(o.existsSync(u)){if(y.isFileUNC(u)){if(!y.hasUNCRead())return void r.json(y.getResponseError("OPTION: --unc-read","Reading from UNC shares is not enabled."))}else if(!y.hasDiskRead()&&s.isAbsolute(u))return void r.json(y.getResponseError("OPTION: --disk-read","Reading from disk is not enabled."));return void o.copyFile(u,t,i)}y.writeFail("Archive not found",u)}catch(e){y.writeFail(t,e)}}else y.writeFail("Invalid archive format",u)}else z("7z");w()})),f.get("/api/v1/browser/download",((e,s)=>{const o=m[e.query.key];o&&s.sendFile(o,(e=>{e&&y.writeFail(["Unable to send file",o],e)}))})),f.get("/api/v1/loader/json",((e,r)=>{const t=e.query.uri;if(t){let e=!0;const i=(e,o)=>{let i;if(!e)try{switch(s.extname(t).toLowerCase()){case".json":case".js":i=JSON.parse(o);break;case".yml":case".yaml":i=p.load(o)}}catch(s){e=s}"object"==typeof i?r.json({success:!0,data:i}):r.json(y.getResponseError(`FILE: Unable to download (${t})`,e))};y.isFileURI(t)?a(t,((e,s)=>i(e,s.body))):o.existsSync(t)?(e=y.isFileUNC(t)?y.hasUNCRead():y.hasDiskRead(),e&&o.readFile(t,"utf8",((e,s)=>i(e,s)))):e=!1,e||r.json(y.getResponseError("FILE: Unknown",t))}}))}();
