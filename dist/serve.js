/* squared-express 0.5.1
   https://github.com/anpham6/squared-express */
!function(){"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0});const t=require("path"),s=require("fs-extra"),o=require("yargs"),r=require("express"),i=require("cors"),n=require("body-parser"),a=require("request"),l=require("mime-types"),c=require("uuid"),d=require("archiver"),p=require("decompress"),u=require("js-yaml"),m=require("chalk"),f=require("@squared-functions/file-manager"),g=require("@squared-functions/document"),y=require("@squared-functions/image"),h={},b={},w=r();w.use(n.urlencoded({extended:!0}));const k=f.moduleCompress(),v=new Map;let S,U,q,E,F,T,C,z={};function j(e,t){const{document:s,task:o}=t;if(S&&s)for(const t of s){const s=S[t];if(s&&s.handler)try{const o=require(s.handler);switch(t){case"chrome":this.install("document",o,s,"1"===e.release);break;default:this.install("document",o,s)}}catch(e){k.writeFail(["Unable to load Document handler",t],e)}}if(U&&o)for(const e of o){const t=U[e];if(t&&t.handler&&t.settings)try{const e=require(t.handler);this.install("task",e,t)}catch(t){k.writeFail(["Unable to load Task handler",e],t)}}v.size&&this.install("image",v),E&&this.install("compress"),q&&this.install("cloud",q),"1"===e.watch&&this.install("watch",undefined)}function M(){var e;const t=null===(e=z.compress)||void 0===e?void 0:e.tinify_api_key;if(t)for(const e of this.assets)if(e.compress)for(const s of e.compress)switch(s.format){case"png":case"jpeg":"tinify"!==(s.plugin||(s.plugin="tinify"))||(s.options||(s.options={})).apiKey||(s.options.apiKey=t)}}function _(e,t="",s){switch(e){case"archive":k.writeFail(["Unable to create archive",t],s);break;case"download":k.writeFail(["Unable to download file",t],s);break;case"decompress":k.writeFail(["Unable to decompress file",t],s);break;case"7z":k.formatMessage(k.logType.SYSTEM,"ARCHIVE",["Install required? <npm i 7zip-bin>","7z"],"Binary not found",{titleColor:"yellow"})}}function R(e){const t=e.length;if(t)return t>1?{hint:`FAIL: ${t} errors`,message:e.map((e=>"- "+e)).join("\n")}:{message:"FAIL: "+e[0]}}{const a=o.usage("$0 [args]").option("access-all",{type:"boolean",description:"Grant full disk and UNC privileges"}).option("access-disk",{alias:"d",type:"boolean",description:"Grant full disk privileges"}).option("access-unc",{alias:"u",type:"boolean",description:"Grant full UNC privileges"}).option("disk-read",{alias:"r",type:"boolean",description:"Grant disk +r (read only)"}).option("disk-write",{alias:"w",type:"boolean",description:"Grant disk +w (write only)"}).option("unc-read",{alias:"y",type:"boolean",description:"Grant UNC +r (read only)"}).option("unc-write",{alias:"z",type:"boolean",description:"Grant UNC +w (write only)"}).option("env",{alias:"e",type:"string",description:"Set environment <prod|dev>",nargs:1}).option("port",{alias:"p",type:"number",description:"Set HTTP port number",nargs:1}).option("cors",{alias:"c",type:"string",description:'Enable CORS access to <origin|"*">',nargs:1}).option("routing",{alias:"a",type:"string",description:"Additional routing namespaces",nargs:1}).epilogue("For more information and source: https://github.com/anpham6/squared-express").argv;let{NODE_ENV:c,PORT:d}=process.env;try{z=s.existsSync("./squared.settings.yml")&&u.load(s.readFileSync(t.resolve("./squared.settings.yml"),"utf8"))||require("./squared.settings.json"),({document:S,task:U,compress:E,cloud:q}=z)}catch(e){k.writeFail(["Unable to load Settings file","squared"],e)}if(a.accessAll?(z.disk_read=!0,z.disk_write=!0,z.unc_read=!0,z.unc_write=!0):(a.accessDisk?(z.disk_read=!0,z.disk_write=!0):(a.diskRead&&(z.disk_read=!0),a.diskWrite&&(z.disk_write=!0)),a.accessUnc?(z.unc_read=!0,z.unc_write=!0):(a.uncRead&&(z.unc_read=!0),a.uncWrite&&(z.unc_write=!0))),E)try{T=require("node-7z");const e=E["7za_bin"];e&&s.existsSync(e)?C=e:({path7za:C}=require("7zip-bin"))}catch(e){}if(z.image){let e="";try{for(e in z.image){const t=z.image[e];t&&v.set(("handler"!==e?"image/":"")+e,require(t))}}catch(t){k.writeFail(["Unable to load Image handler",e],t)}}if(v.has("handler")||v.set("handler",require("@squared-functions/image/jimp")),z.routing){a.env&&z.routing[a.env.trim()]?c=a.env.trim():c&&!z.routing[c]&&(c=z.env),c&&z.routing[c]||(c="development");const o=["all","get","post","put","delete","patch","options","head","checkout","connect","copy","lock","merge","mkactivity","mkcol","move","m-search","notify","propfind","proppatch","purge","report","search","subscribe","trace","unlock","unsubscribe"],i={},n=[],d=(e,t)=>(i[e]||(i[e]=new Set)).add(t),p=(e,t)=>i[e]&&i[e].has(t);if(a.routing)for(let e of a.routing.split(",")){const t=z.routing[e=e.trim()];Array.isArray(t)&&!n.find((t=>t[0]===e))&&n.push([e,t])}if(n.push(...[[c,z.routing[c]],["common",z.routing.common]].filter((e=>Array.isArray(e[1])))),n.length){console.log();for(const[i,a]of n){let n=0,c=0,u=0;for(const i of a){const{mount:a,path:h,document:b,image:v}=i;if(a&&h){let o,i;if(b&&(o=null===(e=z.document)||void 0===e?void 0:e[b])&&(i=o.handler)||(i=v))if(i){const e=f.toPosix(("/"!==h[0]?"/":"")+h),r=e+"/*";if(!p("get",r))try{const n=t.resolve(a);if(s.lstatSync(n).isDirectory()){const a=s=>t.join(n,s.substring(e.length)),c=()=>{k.formatMessage(k.logType.SYSTEM,"BUILD",`${m.bgGrey(n)} ${m.yellow("->")} ${m.bold(e)}`,"",{titleColor:"yellow"}),d("get",r),++u};if(o)if(o.settings)try{const e=new(require(i))(o);w.get(r,(async(r,i,n)=>{const c=new URL(r.protocol+"://"+r.hostname+r.originalUrl),d=new URLSearchParams(c.search),p=d.get("type"),u=d.get("format"),m=a(c.pathname);if(p&&u&&o.settings[p]&&s.existsSync(m)){const o={};d.forEach(((e,t)=>{switch(t){case"type":case"format":case"mime":return;case"~type":case"~format":case"~mime":t=t.substring(1)}const s=t.split(".");let r=o;for(;;){const t=s.shift();if(0===s.length){switch(e){case"true":r[t]=!0;break;case"false":r[t]=!1;break;case"undefined":r[t]=void 0;break;case"null":r[t]=null;break;case"{}":r[t]={};break;case"[]":r[t]=[];break;default:r[t]=isNaN(+e)?e:+e}break}r[t]&&"object"==typeof r[t]||(r[t]={}),r=r[t]}}));const r={sourceFile:m,external:o},n=s.readFileSync(m,"utf8");try{const e=require("source-map-resolve");try{const o=e.resolveSourceMapSync(n,c.pathname,s.readFileSync);// eslint-disable-line @typescript-eslint/no-unsafe-call
if(o){const e=o.map,s=e.sources;r.sourcesRelativeTo=t.dirname(m);for(let e=0;e<s.length;++e)s[e]=t.resolve(r.sourcesRelativeTo,s[e]);const i=g.createSourceMap(n);i.nextMap("unknown",n,e),r.sourceMap=i}}catch(e){k.writeFail(["Unable to parse source map",b],e)}}catch(e){}const a=await e.transform(p,n,u,r);if(a){if(a.map){let e=t.basename(m);e.endsWith(p)||(e+="."+p),e+="."+u+".map",g.writeSourceMap(m,a,{sourceMappingURL:e})}const e=d.get("mime")||l.lookup(c.pathname);e&&i.setHeader("Content-Type",e),i.send(a.code)}else i.send(null)}else n()})),c()}catch(e){k.writeFail(["Unable to load Document handler",b],e)}else k.writeFail(["Document settings not found",b]);else try{const e=require(i);e.prototype instanceof y?(w.get(r,(async(t,o,r)=>{const i=new URL(t.protocol+"://"+t.hostname+t.originalUrl),n=new URLSearchParams(i.search),c=n.get("command"),d=a(i.pathname);if(c&&s.existsSync(d)){let t=l.lookup(i.pathname)||await f.resolveMime(d);t&&"string"!=typeof t&&(t=t.mime);const s=Date.now(),r=await e.transform(d,c,t);r?(k.writeTimeElapsed("IMAGE",c,s),o.setHeader("Content-Type",n.get("mime")||t||"image/jpeg"),r instanceof Buffer?o.send(r):o.sendFile(r)):o.send(null)}else r()})),c()):k.writeFail("Object does not extend ImageConstructor",new Error(i))}catch(e){k.writeFail(["Unable to load Image handler",v],e)}}}catch(e){k.writeFail(["Unable to mount directory",b||v],e)}}else o&&k.writeFail(["Document handler not found",b]);else if(!p("static",h))try{const e=t.join(__dirname,a);w.use(h,r.static(e)),k.formatMessage(k.logType.SYSTEM,"STATIC",`${m.bgGrey(e)} ${m.yellow("->")} ${m.bold(h)}`,"",{titleColor:"yellow"}),d("static",h),++n}catch(e){k.writeFail(["Unable to mount static directory",h],e)}}else{let e=i.handler;if(e){"string"==typeof e&&(e=[e]);let t=[];for(const s of e){const e=f.parseFunction(s,"express");e&&t.push(e)}switch(t.length){case 0:continue;case 1:t=t[0]}let s=!1;for(const e of o){const o=i[e];if(o&&"string"==typeof o&&!p(e,o)){try{w[e](o,t),k.formatMessage(k.logType.SYSTEM,"ROUTE",m.bgGrey(o),"",{titleColor:"yellow"}),d(e,o),++c}catch(e){k.writeFail(["Unable to create route",o],e)}s=!0;break}}s||w.use(t)}}}n>0||c>0||u>0?(console.log(),k.formatMessage(k.logType.SYSTEM," READY ",[i,`static: ${n} / route: ${c}`],u?"workspace: "+u:null,{titleColor:"white",titleBgColor:"bgGreen"})):k.formatMessage(k.logType.SYSTEM," CHECK ",[i,"No routes were mounted"],null,{titleColor:"grey",titleBgColor:"bgYellow"}),console.log()}}}else c||(c="development"),w.use("/",r.static(t.join(__dirname,"html"))),w.use("/dist",r.static(t.join(__dirname,"dist"))),k.writeFail("Routing not defined");f.loadSettings(z),F=f.getPermission(z),k.formatMessage(k.logType.SYSTEM,"DISK",(F.hasDiskRead()?m.green("+"):m.red("-"))+"r "+(F.hasDiskWrite()?m.green("+"):m.red("-"))+"w","",{titleColor:"blue"}),k.formatMessage(k.logType.SYSTEM,"UNC",(F.hasUNCRead()?m.green("+"):m.red("-"))+"r "+(F.hasUNCWrite()?m.green("+"):m.red("-"))+"w","",{titleColor:"blue"});let p,h=a.cors;h?p={origin:h}:(p=z.cors)&&(h=p.origin),h&&(w.use(i(p)),w.options("*",i()),"string"!=typeof h&&(h="true")),k.formatMessage(k.logType.SYSTEM,"CORS",h?m.green(h):m.grey("disabled"),"",{titleColor:"blue"}),a.port?d=a.port.toString():!d&&z.port&&(d=z.port[c]),d=+d>=0&&d||"3000",w.use(n.json({limit:z.request_post_limit||"250mb"})),w.listen(d,(()=>{console.log(""),k.formatMessage(k.logType.SYSTEM,c.toUpperCase(),"Express server listening on port "+m.bold(d),"",{titleColor:c.startsWith("prod")?"green":"yellow"}),console.log("")})),process.env.NODE_ENV=c,process.env.PORT=d}w.post("/api/v1/assets/copy",((e,o)=>{const r=e.query,i=t.normalize(r.to);let n;if(i&&F&&!0===(n=f.hasPermission(i,F)))try{if("2"===r.empty)try{s.emptyDirSync(i)}catch(e){k.writeFail(["Unable to empty base directory",i],e)}const t=e.body,n=new f(i,t,(e=>{const t=Array.from(n.files);o.json({success:t.length>0,files:t,error:R(e)}),n.formatMessage(k.logType.NODE," WRITE ",[i,t.length+" files"])}),z);j.call(n,r,t),M.call(n),n.processAssets("1"===r.empty)}catch(e){o.json(f.responseError("FILE: Unknown",e.toString()))}else n&&o.json(n)})),w.post("/api/v1/assets/archive",((e,o)=>{const r=e.query,i=r.to&&t.normalize(r.to);let n,l=t.join(__dirname,"tmp",c.v4());try{i&&F&&!0===f.hasPermission(l,F)?l=i:s.mkdirpSync(l),n=l+"-zip",s.mkdirpSync(n)}catch(e){return void o.json(f.responseError(`DIRECTORY: ${l}`,e.toString()))}let u=r.append_to,m=!1,g=!1,y=(r.format||"zip").toLowerCase();switch(t.isAbsolute(u)&&(u=t.normalize(u)),y){case"7z":T&&C?m=!0:(_("7z"),y="zip");break;case"gz":case"tgz":g=!0;case"tar":break;default:y="zip"}const h=(i="")=>{try{i=(r.filename||i||c.v4())+"."+y;let a=t.join(n,i);const p=e.body,u=new f(l,p,(e=>{const r={success:u.files.size>0,filename:i,files:Array.from(u.files),error:R(e)},n=e=>{if(e){const t=c.v4();r.bytes=e,r.downloadKey=t,b[t]={filename:i,uri:a}}else r.success=!1;o.json(r),u.formatMessage(k.logType.NODE," WRITE ",[r.filename,e+" bytes"])};if(m)T.add(a,l+t.sep+"*",{$bin:C,recursive:!0}).on("end",(()=>n(f.getFileSize(a)))).on("error",(e=>_("archive",y,e)));else{const e=d(y,{zlib:{level:k.level.gz}});e.pipe(s.createWriteStream(a).on("close",(()=>{if(g){const e="tgz"===y?a.replace(/tar$/,"tgz"):a+".gz";k.createWriteStreamAsGzip(a,e).on("finish",(()=>{a=e,r.filename=t.basename(e),n(f.getFileSize(e))})).on("error",(e=>{r.success=!1,_("archive",y,e),o.json(r)}))}else n(e.pointer())})).on("error",(e=>_("archive",y,e)))),e.directory(l,!1),e.finalize()}}),z);j.call(u,r,p),M.call(u),u.processAssets()}catch(e){o.json(f.responseError("FILE: Unknown",e.toString()))}};if(u){const e=/([^/\\]+)\.(\w+?)$/.exec(u);if(e&&(T&&C||/zip|tar|gz|bz|bz2|bzip2/i.test(e[2]))){const r=t.join(n,e[0]),i=()=>{T&&C?T.extractFull(r,l,{$bin:C,recursive:!0}).on("end",(()=>h(e[1]))).on("error",(t=>{_("decompress",e[0],t),h()})):p(r,l).then((()=>h(e[1]))).catch((t=>{_("decompress",e[0],t),h()}))};try{if(f.isFileHTTP(u)){const e=s.createWriteStream(r);let t;return e.on("finish",i),void a(u).on("response",(e=>{const s=e.statusCode;s>=300&&(_("download",u,new Error(s+" "+e.statusMessage)),t=!0)})).on("error",(e=>{t||_("download",u,e),h()})).pipe(e)}if(s.existsSync(u=f.resolveUri(u))){if(f.isFileUNC(u))return void(F&&F.hasUNCRead()?s.copyFile(u,r,i):o.json(f.responseError("OPTION: --unc-read","Reading from UNC shares is not enabled.")));if(t.isAbsolute(u))return void(F&&F.hasDiskRead()?s.copyFile(u,r,i):o.json(f.responseError("OPTION: --disk-read","Reading from disk is not enabled.")))}k.writeFail("Archive not found",new Error(u))}catch(e){k.writeFail(r,e)}}else _("7z")}h()})),w.get("/api/v1/loader/data/json",((e,o)=>{let r=e.query.key;const i="1"===e.query.cache;if(r){const e=(e,s)=>{let n;if(!e)try{switch(t.extname(r).toLowerCase()){case".json":case".js":n=JSON.parse(s);break;case".yml":case".yaml":n=u.load(s)}}catch(t){e=t}"object"==typeof n?(i&&(h[r]=n),o.json({success:!0,data:n})):o.json(f.responseError(e,`FILE: Unable to download (${r})`))};if(i&&h[r]||f.isUUID(r)){const e=h[r];e?o.json({success:!0,data:e}):o.json(f.responseError(r,"CACHE: Could not locate key"))}else f.isFileHTTP(r)?a(r,((t,s)=>e(t,s.body))):F&&s.existsSync(r=f.resolveUri(r))&&(f.isFileUNC(r)?F.hasUNCRead():F.hasDiskRead())?s.readFile(r,"utf8",((t,s)=>e(t,s))):o.json(f.responseError("FILE: Unknown",r))}})),w.get("/api/v1/loader/data/blob",((e,t)=>{const s=e.query.key,o=b[s];if(o){const r=e.query.cache,i=o.uri;"0"===r&&delete b[s],t.download(i,o.filename,(e=>{e&&k.writeFail(["Unable to send file",i],e)}))}else t.send(null)}))}();
